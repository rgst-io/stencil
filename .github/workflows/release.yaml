name: release

on:
  # Only run when triggered through the Github UI or API.
  workflow_dispatch: {}

permissions:
  contents: write
  packages: write
  issues: write

concurrency:
  group: stencil-release-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/create-github-app-token@v1
        id: homebrew-tap-github-app
        with:
          # https://github.com/organizations/rgst-io/settings/apps/rgst-io-stencil-homebrew
          app-id: 885121
          private-key: ${{ secrets.CI_APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
          repositories: homebrew-tap
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - uses: jdx/mise-action@v2
        with:
          experimental: true
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Retrieve goreleaser version
        run: |-
          echo "version=$(mise current goreleaser)" >> "$GITHUB_OUTPUT"
        id: goreleaser
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: fregante/setup-git-user@v2

      # Bumping logic
      - name: Get next version
        id: next_version
        uses: thenativeweb/get-next-version@main
        with:
          prefix: "v" # optional, defaults to ''
      - name: Wait for manual approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.GITHUB_TOKEN }}
          approvers: "jaredallard"
          issue-title: "Release ${{ steps.next_version.outputs.version }}"
      - name: Create Tag
        run: |-
          git tag -a "${{ steps.next_version.outputs.version }}" -m "Release ${{ steps.next_version.outputs.version }}"
      - name: Create Gentoo Go Dependency Archive
        env:
          NEXT_VERSION: ${{ steps.next_version.outputs.version }}
        run: |-
          export GOMODCACHE="$(pwd)/.dist/go-mod"
          mkdir -p "${GOMODCACHE}"
          cd "${GOMODCACHE}/.."

          go mod download -modcacherw
          XZ_OPT='-T0 -9' tar -acf "stencil-${NEXT_VERSION}-deps.tar.xz" go-mod
      - name: Create release artifacts and Github Release
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: v${{ steps.goreleaser.outputs.version }}
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HOMEBREW_TAP_GITHUB_TOKEN: ${{ steps.homebrew-tap-github-app.outputs.token }}
